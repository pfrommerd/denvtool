{% include "Dockerfile.base" %}

# read in the requirements.txt file
{% set requirements = read_requirements(project_dir / "requirements.txt") %}
{% set always_build = ["jax", "jaxlib", "tensorstore"] %}

# Include the build steps for each library
# that is specified in the config file
{% for library in config.build if library not in always_build %}
    {% include "custom/Dockerfile." + library %}
{% endfor %}
{% for library in always_build %}
    {% include "custom/Dockerfile." + library %}
{% endfor %}

FROM base as env

# Include the custom-built packagesin the env
{% for library in config.build if library not in always_build %}
    COPY --from={{library}}-build /packages /packages
{% endfor %}
{% for library in always_build %}
    COPY --from={{library}}-build /packages /packages
{% endfor %}

COPY requirements.txt /tmp/requirements.txt
# remove jax and jaxlib from the requirements.txt file
RUN sed -i '/^jaxlib/d' /tmp/requirements.txt; \
    sed -i '/^jax/d' /tmp/requirements.txt
# handle jax/jaxlib separately to ensure we get the right cuda/cpu version
# rather than whatever version is in the requirements.txt file
RUN pip install --no-index --find-links=file:///packages/ jaxlib=={{requirements.jaxlib.version}} jax=={{requirements.jax.version}}
RUN pip install --find-links=file:///packages/ -r /tmp/requirements.txt

# create the user info
RUN useradd -d /home/{{user}} -s /usr/bin/{{config.shell}} --uid {{uid}} {{user}}
# Make the mountpoints
RUN mkdir /home/{{user}}; \
    chown {{user}}:{{user}} /home/{{user}}
RUN mkdir /home/{{user}}/code; \
    chown {{user}}:{{user}} /home/{{user}}/code
RUN usermod -aG sudo {{user}}
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER {{user}}
WORKDIR /home/{{user}}/code

ENV PYTHONPATH /home/{{user}}/code:/home/{{user}}/code/projects

ENTRYPOINT [ "sleep", "infinity" ]
